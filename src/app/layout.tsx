"use client";
import localFont from "next/font/local";
import "./globals.css";
import React, { useState, createContext } from "react";
import Sidebar from "../components/Sidebar";
import Topbar from "../components/Topbar";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const CategoryContext = createContext<{
  selectedCategory: string;
  setSelectedCategory: (cat: string) => void;
}>({
  selectedCategory: "Electronics",
  setSelectedCategory: () => {},
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState("Electronics");

  return (
    <html lang="en">
      <body className="antialiased bg-background text-foreground">
        <CategoryContext.Provider value={{ selectedCategory, setSelectedCategory }}>
          <div className="flex min-h-screen">
            {/* Desktop Sidebar */}
            <div className="hidden sm:block">
              <Sidebar selectedCategory={selectedCategory} onCategorySelect={setSelectedCategory} />
            </div>
            {/* Mobile Sidebar Drawer */}
            {sidebarOpen && (
              <div className="fixed inset-0 z-50 flex">
                <div className="w-64 bg-white h-full shadow-lg">
                  <Sidebar selectedCategory={selectedCategory} onCategorySelect={cat => { setSelectedCategory(cat); setSidebarOpen(false); }} />
                </div>
                <div className="flex-1 bg-black/30" onClick={() => setSidebarOpen(false)} />
              </div>
            )}
            <main className="flex-1 flex flex-col bg-gray-50">
              {/* Topbar with hamburger menu on mobile */}
              <div className="sm:hidden flex items-center p-4 border-b border-gray-200 bg-white">
                <button
                  className="mr-4"
                  aria-label="Open sidebar"
                  onClick={() => setSidebarOpen(true)}
                >
                  <svg width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor" className="text-gray-700">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                  </svg>
                </button>
                <span className="font-bold text-lg">Marketplace</span>
              </div>
              <Topbar />
              <section className="flex-1 p-6">{children}</section>
            </main>
          </div>
        </CategoryContext.Provider>
      </body>
    </html>
  );
}
